{
  "author": {
    "name": "Christian Revillard"
  },
  "name": "cre-nodejs-server",
  "description": "node.js server",
  "version": "2.0.0",
  "repository": {
    "url": "https://github.com/christianrevillard/NodeJsServer"
  },
  "main": "./server.js",
  "keywords": [
    "node.js",
    "server",
    "webSocket",
    "web server"
  ],
  "dependencies": {
    "express": "~3.4.4",
    "socket.io": "~1.1.0"
  },
  "engines": {
    "node": "*"
  },
  "scripts": {
    "start": "node server.js"
  },
  "readme": "ï»¿# cre-nodejs-server\r\n\r\nSimple web server, based on express and socket.io.\r\n\r\n# example index.js\r\n\r\n```\r\nvar server = require('cre-nodejs-server');\r\n\r\nserver.start({\r\n  rootDirectory: require('path').resolve(__dirname), \r\n  routes: [\r\n    { route: '/myPage', handler: server.clientFileHandler('./Client/myPage.html') },\r\n    { route: '/myCustomHandlerPage', handler: require('./customHandler') }, \r\n    { route: '/myOwnClientDir/*', handler: clientFileHandler() }, \r\n  ]\r\n  sockets:['socketPath1', 'socketPath1']\r\n  pageHeader: 'html/header.html'\r\n});\r\n```\r\n\r\n# parameters for start method:\r\n\r\n## port\r\n\r\n## rootDirectory\r\n\r\nWhere we will be lookig for files. Can often use require('path').resolve(__dirname) to use the same dir as index.js runs in.\r\n\r\n## tempFolder\r\n\r\nDirectory used for routes starting with /temp/, typically a writable location, for file upload. Default is C:/tmp\r\n\r\n## routes\r\n\r\nArray of route objects. For each term:\r\n* route: string defining the route, use * as wildcard\r\n* handler: must be a function(request, response)\r\n\r\n## sockets\r\n\r\nList of socket paths that will be initialized at server start. This makes sure the socket is created before any client tries to connect. This is not necessary if we expect the server to start sending before any client connects.\r\n\r\n## pageHeader\r\n\r\nFile that will be included in the head section of all html files.\r\n\r\n## contentTypes\r\nMapping between file extensions and content-types, in case something is missing in the default list.\r\n\r\n# Standard route handlers\r\n\r\n## clientFileHandler()\r\n\r\n```\r\n{ route: '/myOwnClientDir/*', handler: clientFileHandler() }\r\n```\r\nAll files under myOwnClientDir will be handled as client/content files and downloaded.\r\n\r\n## clientFileHandler(filePath)\r\n\r\n```\r\n{ route: '/myPage', handler: server.clientFileHandler('./Client/myPage.html') }\r\n```\r\nDefines an alias: http://server/myPage will be the same as http://server/Client/myPage.html\r\n\r\n# Default handlers\r\n\r\nThese handlers are defined by default:\r\n\r\n```\r\n{ route: '*/Client/*', handler: clientFileHandler()}\r\n{ route: '/temp/*', handler: clientFileHandler() }\r\n{ route: '/', handler: clientFileHandler('./Client/index.html') }\r\n{ route: '*', handler: require(\"./pageNotFoundHandler\") }\r\n```\r\n\r\nYour own routes will come before those, except an override for \"*\", which will always be handled last, but before the default one.\r\n\r\n# Sockets\r\n\r\nJust call server.socket(socketPath) to get a socket.io socket. This creates the socket if it does not exists yet and returns it.\r\n\r\nA custom handler for the socket can be defines by creating a module with the specified path. The module must return a function(socket), that is be called on socket connection.\r\n\r\n# Events\r\n\r\nserver.events is an EventHandler.\r\n\r\nserverSarted is fired when the start process is completed.\r\n\r\n# Examples\r\n\r\nSee included examples for more information.\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/christianrevillard/NodeJsServer/issues"
  },
  "homepage": "https://github.com/christianrevillard/NodeJsServer",
  "_id": "cre-nodejs-server@2.0.0",
  "_shasum": "65cb6f0d638171a1b658dd1cc08607e6f10d2316",
  "_from": "cre-nodejs-server@>=2.0.0"
}
